name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # ⬇️ PASSO 1: Configurar a versão do Node
      - uses: actions/setup-node@v3
        with:
          node-version: '18' # Mantenha a versão que você usa no desenvolvimento

      # ⬇️ PASSO 2: Instalar dependências
      - name: Install dependencies
        run: npm install

      # ⬇️ PASSO 3: Rodar o BUILD de produção explicitamente
      # Isso cria a pasta de output que o deploy procurará.
      - name: Run Angular Build
        run: npm run build -- --configuration=production --base-href /

      # ⬇️ PASSO 4: Fazer o Deploy para o Azure SWA
      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WONDERFUL_RIVER_0D4566F1E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          
          # Diz ao SWA para PULAR a etapa de build, usando os arquivos gerados no Passo 3.
          skip_app_build: true

          # A raiz do seu projeto Angular (onde o package.json e angular.json estão).
          app_location: "/"
          
          # Sem API no SWA, mantém vazio.
          api_location: ""
          
          # CORREÇÃO PRINCIPAL: O caminho aninhado onde o 'index.html'
          # é provavelvelmente gerado pelo novo builder do Angular.
          output_location: "dist/bolao-online-app-v5/browser"
